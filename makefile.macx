CC=cc

# Comment these out to disable PNG output if no PNG lib is available.
#
# You will need libpng. To install follow these instructions:
# 1. Press Command+Space and type Terminal and press enter/return key.
# 2. [Optional - if you don't already have Homebrew installed] Run in Terminal app:
#    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" < /dev/null 2> /dev/null
#    and press enter/return key. Wait for the command to finish - it may take a long time.
# 3. Run:
#    brew install libpng --universal [both 32-bit and 64-bit code]
# Done! You can now use libpng.
#
PNG_FLAGS += -DUSE_PNG
SYSTEM_PNG_HEADERS = /usr/local/include/png.h
ifneq "$(wildcard $(SYSTEM_PNG_HEADERS) )" ""
   PNG_FLAGS += -I/usr/local/include
else
   PNG_FLAGS += -I./macx/png/include
endif
SYSTEM_PNG_LIB = /usr/local/lib/libpng.a
ifneq "$(wildcard $(SYSTEM_PNG_LIB) )" ""
   PNG_LIBS += /usr/local/lib/libpng.a
else
   PNG_LIBS += ./macx/png/lib/libpng.a
endif
PNG_LIBS += -lz

# Comment these out to disable tile rendering option.
#
TR_FLAGS = -DTILE_RENDER_OPTION
TR_SRC = tr.c

# UnComment this to build in support for Mesa Offscreen rendering
#
OFFSCREEN_FLAGS = -DCGL_OFFSCREEN_OPTION
OFFSCREEN_LIBS =

# Comment these out to disable the test GUI made with MUI.
#
# Define both MUI and GLUT to access the MUI GUI via the GLUT menu.
GUI_FLAGS = -DTEST_MUI_GUI -I./mui/src -DUSE_GLUT_MENUS -I./macx/glut/include
GUI_SRC = ldglgui.c
GUI_LIBS = -L./mui/src/mui -lmui
LIBS = libmui.a

# C memory allocation header
#
MALLOC_FLAGS = -I./macx/include

# Because we are using Carbon (legacy framework), we can only build i386 - there is no x86_64 port
TARGET_ARCH = -arch i386
MACOSX_SDK = -mmacosx-version-min=10.7 -isysroot /Developer/SDKs/MacOSX10.7.sdk

GL_LIBS = -framework OpenGL -framework GLUT -framework Carbon -lobjc -lstdc++ $(OFFSCREEN_LIBS) 

CFLAGS = -g -I./osx -DUNIX -DMACOS_X -DUSING_CARBON -DUSE_OPENGL -DUSE_L3_PARSER -DUSE_BMP8 -DNEED_MIN_MAX $(MALLOC_FLAGS) $(PNG_FLAGS) $(TR_FLAGS) $(OFFSCREEN_FLAGS) $(GUI_FLAGS) -Ildrawini

CFLAGS += -DNOT_WARPING -DVISIBLE_SPIN_CURSOR -DSAVE_DEPTH_ALL -DSAVE_COLOR_ALL -DMACOS_X_TEST2 -DHAVE_STRDUP $(TARGET_ARCH) $(MACOSX_SDK)

SRCS = ldliteVR_main.c platform.c dirscan.c gleps.c camera.c f00QuatC.c quant.c stub.c lcolors.c y.tab.c lex.yy.c qbuf.c main.c ldglpr.c L3Edit.c L3Math.c L3Input.c L3View.c hoser.c ldglmenu.c plugstub.c getargv.c ldrawini/LDrawIni.c ldsearch.c $(TR_SRC) $(GUI_SRC)
OBJS = $(SRCS:.c=.o)

all: ldglite

ldglite:   $(OBJS) $(LIBS)
	$(CC) $(CFLAGS) -force_cpusubtype_ALL $(OBJS) -o ldglite $(GL_LIBS) $(PNG_LIBS) $(GUI_LIBS) -lm
	rm -rf l3glite
	ln -s ldglite l3glite
	rm -rf l3gledit
	ln -s ldglite l3gledit

libmui.a:
	if [ -d mui/src/mui ] ; then cd mui/src/mui ; $(MAKE) -f Makefile.macx $@ ; fi

l3glite:   ldglite

ldglitepng:   ldglite

l3glitepng:   ldglite

clean:
	rm *.o 
	if [ -a ldglite ]; then rm ldglite; fi
	if [ -a l3glite ]; then rm -rf l3glite; fi
	if [ -a l3gledit ]; then rm	-rf l3gledit; fi
	if [ -d mui/src/mui ] ; then cd mui/src/mui ; $(MAKE) -f Makefile $@ ; fi